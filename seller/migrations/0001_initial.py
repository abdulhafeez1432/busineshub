# Generated by Django 3.2 on 2021-04-28 17:32

import businesshub.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flip', models.CharField(choices=[('1', 'Buy Out'), ('2', 'Partnership')], max_length=150, verbose_name='Type of Flipping')),
                ('name', models.CharField(max_length=50, verbose_name='Busniess Name')),
                ('status', models.BooleanField(default=False, verbose_name='Regsitration Status')),
                ('registration', models.CharField(blank=True, max_length=25, null=True, verbose_name='Regsitraion Number')),
                ('t_business', models.CharField(choices=[('1', 'Business Name'), ('2', 'Sole Proprietorship'), ('3', 'Partnerships'), ('4', 'Limited Partnership'), ('5', 'Corporation'), ('6', 'Limited Liability Company'), ('7', 'Nonprofit Organization'), ('8', 'Cooperative')], max_length=120, verbose_name='Business Type')),
                ('approval', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business',
                'verbose_name_plural': 'Businesss',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='account.user')),
                ('phonenumber', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('passport', models.ImageField(null=True, upload_to='seller/', validators=[businesshub.validators.validate_file_size, businesshub.validators.validate_file_extension02], verbose_name='Passport Photography')),
                ('address', models.CharField(max_length=250, verbose_name='Contact Address')),
                ('country', models.CharField(max_length=50, verbose_name='Country')),
                ('dob', models.DateField(default='2019-06-04', verbose_name='Date of Birth')),
                ('age', models.IntegerField(default=18, validators=[django.core.validators.MaxValueValidator(70), django.core.validators.MinValueValidator(18)])),
                ('occupation', models.CharField(max_length=50)),
                ('sex', models.CharField(choices=[('1', 'Male'), ('2', 'Female')], default='Male', max_length=50)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Seller Profile',
                'verbose_name_plural': 'Seller Profiles',
            },
        ),
        migrations.CreateModel(
            name='BusinessTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demographic', models.CharField(max_length=150)),
                ('psychographic', models.CharField(max_length=150)),
                ('behavioral', models.CharField(max_length=150)),
                ('geographic', models.CharField(max_length=150)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='target', to='seller.business')),
            ],
            options={
                'verbose_name': 'BusinessTarget',
                'verbose_name_plural': 'BusinessTargets',
            },
        ),
        migrations.CreateModel(
            name='BusinesStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('howmany', models.IntegerField(default=1, verbose_name='How Many Staff')),
                ('paying', models.IntegerField(default=1, verbose_name='How many Paying  Staff')),
                ('nonpaying', models.IntegerField(default=1, verbose_name='How many Non-Paying Staff')),
                ('currency', models.CharField(choices=[('1', 'EUR'), ('2', 'USD'), ('3', 'NAR'), ('4', 'GBP')], max_length=50, verbose_name='Payment Currency')),
                ('maxpayment', models.FloatField(default=0.0, verbose_name='Maximum Paid Staff per Month')),
                ('minpayment', models.FloatField(default=0.0, verbose_name='Minimum Paid Staff per Month')),
                ('total', models.FloatField(default=0.0, verbose_name='Total Salary Paid per Month')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='seller.business')),
            ],
            options={
                'verbose_name': 'BusinesStaff',
                'verbose_name_plural': 'BusinesStaffs',
            },
        ),
        migrations.CreateModel(
            name='BusinessFinancial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bestyear', models.FloatField(default=0.0, verbose_name='Total Best Income For Year')),
                ('badtyear', models.FloatField(default=0.0, verbose_name='Total Worst Income For Year')),
                ('averageyear', models.FloatField(default=0.0, verbose_name='Average Income Per Year')),
                ('avaragemonth', models.FloatField(default=0.0, verbose_name='Average Income Per Month')),
                ('moneyhand', models.FloatField(default=0.0, verbose_name='Money At Hand or Bank')),
                ('debt', models.FloatField(default=0.0, verbose_name='Debt')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial', to='seller.business')),
            ],
            options={
                'verbose_name': 'BusinessFinancial',
                'verbose_name_plural': 'BusinessFinancials',
            },
        ),
        migrations.CreateModel(
            name='BusinessDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ImageField(null=True, upload_to='documents/', validators=[businesshub.validators.validate_file_size, businesshub.validators.validate_file_extension02], verbose_name='Passport Phpassotography')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document', to='seller.business')),
            ],
            options={
                'verbose_name': 'BusinessDocument',
                'verbose_name_plural': 'BusinessDocuments',
            },
        ),
        migrations.CreateModel(
            name='AboutBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('founder', models.CharField(help_text='Seperate the name with comma', max_length=500, verbose_name='OwnerShip Name')),
                ('found', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], default=2021, verbose_name='When Found')),
                ('about', models.TextField(verbose_name='About The Business')),
                ('location', models.CharField(max_length=120, verbose_name='Business Location')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='about', to='seller.business')),
                ('industry', models.ManyToManyField(to='seller.Industry')),
            ],
            options={
                'verbose_name': 'AboutBusiness',
                'verbose_name_plural': 'AboutBusinesss',
            },
        ),
    ]
